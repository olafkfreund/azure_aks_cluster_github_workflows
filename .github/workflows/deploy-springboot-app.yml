name: Build and Deploy Springboot App to AKS

on:
  workflow_dispatch:
  # push:
  #   branches: [ main ]  # Adjust branch as needed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Popular distribution of OpenJDK
          java-version: '17'  # Use your Java version

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Use your Node.js version

      - name: Build Backend
        working-directory: apps/springboot/backend
        run: mvn clean package -DskipTests

      - name: Build Frontend
        working-directory: apps/springboot/frontend
        run: |
          npm install --force
          npm run build

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/apps/springboot/backend:${{ github.sha }} ./apps/springboot/backend
          az acr login --name ${{ secrets.ACR_NAME }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/apps/springboot/backend:${{ github.sha }}

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/apps/springboot/frontend:${{ github.sha }} ./apps/springboot/frontend
          az acr login --name ${{ secrets.ACR_NAME }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/apps/springboot/frontend:${{ github.sha }}

      - name: Set AKS context
        uses: azure/aks-set-context@v2
        with:
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

      - name: Deploy to AKS
        run: |
          kubectl set image deployment/apps/springboot/backend-deployment apps/springboot/backend=${{ secrets.ACR_LOGIN_SERVER }}/apps/springboot/backend:${{ github.sha }}
          kubectl set image deployment/frontend-deployment frontend=${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}