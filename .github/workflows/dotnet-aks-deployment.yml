name: Build and Deploy Dotnet Application to AKS

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
permissions:
  id-token: write
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      working-directory: apps/dotnet/aspnet-core-dotnet-core
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/aspnet-core-dotnet-core:latest .
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/aspnet-core-dotnet-core:latest

  deploy:
    runs-on: ubuntu-latest
    environment: dev
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/cli@v2
      with:
        inlineScript: az --version

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get AKS Credentials
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Deploy to AKS
      working-directory: apps/dotnet/aspnet-core-dotnet-core
      run: |
        kubectl apply -f dotnet-deployment.yml
        kubectl rollout status deployment/aspnet-core-deployment
    
    - name: Install Test Dependencies
      run: |
        pip install pytest kubernetes requests
  
    - name: Run Integration Tests
      working-directory: apps/dotnet
      run: |
        pytest ./test/integration_tests.py -v